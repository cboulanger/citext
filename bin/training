#!/usr/bin/env bash
set -o errexit
trap 'exit 130' INT

MODEL_NAME=${1:-default}

if [[ ! -d Exparser/Dataset/$MODEL_NAME/Features ]]; then
    echo "No training data exists. To use the default model, run ./bin/prepare-training first."
    exit 1
fi

echo
echo "=========================================================================================="
echo "Training reference extraction for $MODEL_NAME model, please wait..."
echo "=========================================================================================="
echo
start_extraction=`date +%s`
docker run -it --rm -v $(pwd):/app excite_toolchain train_extraction $MODEL_NAME
end_extraction=`date +%s`
runtime_extraction=$((end_extraction-start_extraction))

echo
echo "=========================================================================================="
echo "Training reference segmentation for $MODEL_NAME model, please wait..."
echo "=========================================================================================="
echo
start_segmentation=`date +%s`
docker run -it --rm -v $(pwd):/app excite_toolchain train_segmentation $MODEL_NAME
end_segmentation=`date +%s`

# Report performance
convertsecs() {
 ((h=${1}/3600))
 ((m=(${1}%3600)/60))
 ((s=${1}%60))
 printf "%02d:%02d:%02d" $h $m $s
}
runtime_segmentation=$((end_segmentation-start_segmentation))
echo "Finished extraction training for  $MODEL_NAME model in $(convertsecs $runtime_extraction) and segmentation training in $(convertsecs $runtime_segmentation)."
