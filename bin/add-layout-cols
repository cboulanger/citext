#!/usr/bin/env python3

import sys, os, csv, os

source_dir = sys.argv[1]
target_dir = sys.argv[2]

print("Adding layout columns from " + source_dir + " to " + target_dir)
answer = input("Proceed? [y/n] ").lower()
if answer != "y":
    sys.exit(0)

counter= 0
for file_name in os.listdir(source_dir):
    if file_name.startswith(".") or not file_name.endswith(".csv"):
        continue
    print("Processing " + file_name)
    source_file = os.path.join(source_dir, file_name)
    target_file = os.path.join(target_dir, file_name)
    if file_name.startswith(".") \
            or not file_name.endswith(".csv") \
            or not os.path.isfile(target_file):
        continue

    source_rows = []
    with open(source_file) as csvfile:
        reader = csv.reader(csvfile, delimiter='\t', quoting=csv.QUOTE_NONE)
        for row in reader:
            source_rows.append(row)

    target_rows = []
    with open(target_file) as csvfile:
        reader = csv.reader(csvfile, delimiter='\t', quoting=csv.QUOTE_NONE)
        for row in reader:
            target_rows.append(row)

    num_src_lines = len(source_rows)
    num_tgt_lines = len(target_rows)
    ti = 0
    for si in range(0, num_src_lines):
        cmp_src_col0 = source_rows[si][0]
        cmp_tgt_col0 = target_rows[ti][0].replace("<ref>","").replace("</ref>","")
        cmp_tgt_col1 = target_rows[ti][0]
        cmp_src_col1 = source_rows[si][0][0:len(cmp_tgt_col1)]
        if cmp_src_col0 != cmp_tgt_col0 and cmp_src_col1 != cmp_src_col1:
            if si == num_src_lines - 1 and ti < num_tgt_lines - 1:
                print("Cannot find match for line " + str(ti) + " of " + str(num_tgt_lines) + " in " + target_file)
                sys.exit(0)
            continue
        # line matches
        extended_row = [target_rows[ti][0]]
        extended_row.extend(source_rows[si][1:])
        target_rows[ti] = extended_row
        ti += 1
        if ti == num_tgt_lines:
            break

    with open(target_file, 'w', newline="\n") as csvfile:
        writer = csv.writer(csvfile, delimiter='\t', quoting=csv.QUOTE_NONE, escapechar='\\')
        writer.writerows(target_rows)



